name: CI/CD Pipeline

on:
  push:
    branches: 
      - '**'   # run on every push to every branch
  pull_request:
    branches:
      - master   # triggers on PRs targeting master

jobs:
  # -----------------------
  # 1. Run Unit Tests on any push
  # -----------------------
  unit-tests:
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 8.0

      - name: Restore dependencies
        run: dotnet restore

      - name: Build solution
        run: dotnet build --no-restore --configuration Release

      - name: Run unit tests
        run: dotnet test --no-build --filter "FullyQualifiedName~unit_tests" --configuration Release --logger "trx;LogFileName=UnitTests.trx"

  # -----------------------
  # 2. Run Integration Tests on Pull Request to main or push to main
  # -----------------------
  integration-tests:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' || (github.event_name == 'push' && github.ref == 'refs/heads/main')
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 8.0

      - name: Restore dependencies
        run: dotnet restore

      - name: Build solution
        run: dotnet build --no-restore --configuration Release

      - name: Run integration tests
        run: dotnet test MyApp.Tests/MyApp.Tests.csproj --no-build --filter "FullyQualifiedName~integration_tests" --configuration Release --logger "trx;LogFileName=IntegrationTests.trx"



  # -----------------------
  # 3. Build & Push Docker Image when PR is approved (merge to master)
  # -----------------------
  docker-build-push:
    runs-on: ubuntu-latest
    needs: [unit-tests, integration-tests]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build Docker image
        run: docker build -t ozblech/arbox-employees-app:${{ github.sha }} .

      - name: Push Docker image
        run: docker push ozblech/arbox-employees-app:${{ github.sha }}

